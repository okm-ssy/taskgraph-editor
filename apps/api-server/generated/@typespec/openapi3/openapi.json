{
  "openapi": "3.0.0",
  "info": {
    "title": "Taskgraph API",
    "version": "1.0.0"
  },
  "tags": [],
  "paths": {
    "/projects": {
      "get": {
        "operationId": "Projects_list",
        "summary": "List all projects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "operationId": "ProjectOperations_get",
        "summary": "Get project taskgraph",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskGraph"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tasks": {
      "post": {
        "operationId": "Tasks_create",
        "summary": "Create a new task",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tasks/{taskName}": {
      "get": {
        "operationId": "TaskOperations_get",
        "summary": "Get a specific task",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "TaskOperations_update",
        "summary": "Update a task",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "TaskOperations_delete",
        "summary": "Delete a task",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tasks/{taskName}/implementation": {
      "patch": {
        "operationId": "TaskImplementation_update",
        "summary": "Update task implementation notes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImplementationNotesRequest"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tasks/{taskName}/notes": {
      "patch": {
        "operationId": "TaskNotes_update",
        "summary": "Update task notes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotesRequest"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tasks/{taskName}/requirements": {
      "patch": {
        "operationId": "TaskRequirements_update",
        "summary": "Update task requirements",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequirementsRequest"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "required": [
          "code",
          "message",
          "timestamp",
          "requestId"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ErrorDetails"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "depends": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "difficulty": {
            "type": "number",
            "format": "float"
          },
          "issueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "addition": {
            "$ref": "#/components/schemas/TaskAddition"
          }
        }
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "required": [
          "id",
          "name",
          "tasks"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "depends": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "difficulty": {
            "type": "number",
            "format": "float"
          },
          "issueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "addition": {
            "$ref": "#/components/schemas/TaskAddition"
          }
        }
      },
      "TaskAddition": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "front",
              "back",
              "infra",
              "other",
              "parent",
              ""
            ]
          },
          "category": {
            "type": "string"
          },
          "baseDifficulty": {
            "type": "number",
            "format": "float"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "implementation_notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "api_schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "design_images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskGraph": {
        "type": "object",
        "required": [
          "version",
          "tasks"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "tasks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "UpdateImplementationNotesRequest": {
        "type": "object",
        "required": [
          "implementation_notes"
        ],
        "properties": {
          "implementation_notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateNotesRequest": {
        "type": "object",
        "required": [
          "notes"
        ],
        "properties": {
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateRequirementsRequest": {
        "type": "object",
        "required": [
          "requirements"
        ],
        "properties": {
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "depends": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "difficulty": {
            "type": "number",
            "format": "float"
          },
          "issueNumber": {
            "type": "integer",
            "format": "int32"
          },
          "addition": {
            "$ref": "#/components/schemas/TaskAddition"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "required": [
          "field",
          "message"
        ],
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Development server",
      "variables": {}
    }
  ]
}
